<?php

namespace app\controllers;

use Yii;
use yii\web\Controller;
use app\models\Log;


class TestController extends Controller
{
//    public function actions()
//    {
//        var_dump(123);die(1);
//        return parent::actions(); // TODO: Change the autogenerated stub
//    }

    public function actionIndex()
    {
        $result = Log::find()->query(["match" => ["title" => "yii"]])->all(); // articles whose title contains "yii"

        // http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-flt-query.html
        $query = Log::find()->query([
            "fuzzy_like_this" => [
                "fields" => ["title", "description"],
                "like_text" => "This query will return articles that are similar to this text :-)",
                "max_query_terms" => 12
            ]
        ]);

        $query->all(); // gives you all the documents
        // you can add facets to your search:
        $query->addStatisticalFacet('click_stats', ['field' => 'visit_count']);
        $query->search(); // gives you all the records + stats about the visit_count field. e.g. mean, sum, min, max etc...
    }

    public function actionPut()
    {
        $log = Yii::$app->user->login();
        var_dump($log);
//        $Log = new \app\components\Log;
//        $Log->bar();

//        $Log = new Log;
//        $Log->ip_address = '123.0.0.1';
//        $Log->email = 'test123@test.com';
//        $Log->insert();
    }

    public function actionDelete($id)
    {

        $Log = new Log;
        $Log->delete($id);
    }

    public function actionDeleteAll()
    {
        Log::deleteAll();
    }

    public function actionGet()
    {

        $Log = Log::get(2); // get a record by pk
        $Logs = Log::mget([1,2,3]); // get multiple records by pk
        $Log = Log::find()->where(['name' => 'test'])->one(); // find by query, note that you need to configure mapping for this field in order to find records properly

        $model = new Log;
//        $model->setPrimaryKey('id');
        $data = $model::find(); // find all by query (using the `active` scope)

//        $data = $model::find()->query([
////            "size" => 5,
//            "wildcard" => [
//                "category" => [
//                    "value" => "*logi*"
//                ],
//            ],
//        ]);
//        $data = $data->count();
//        var_dump($data);die();
        $data = $data->limit(50);
//        $data = $data->offset(5);
//        var_dump($data);
        $data = $data->all();
//        $Logs = Log::findAll(['email' => 'victordobr@gmail.com']);
//        $pk = \yii\elasticsearch\ActiveRecord::primaryKey()[0];
//        var_dump($pk);
        var_dump($data);

    }
}